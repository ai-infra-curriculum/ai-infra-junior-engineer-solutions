---
# Backend Application v1
# Simple HTTP server responding with version information
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-v1
  namespace: ingress-demo
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      version: v1
  template:
    metadata:
      labels:
        app: backend
        version: v1
    spec:
      containers:
      - name: backend
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=Backend v1 - Pod: $(POD_NAME) - Node: $(NODE_NAME)"
          - "-listen=:8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 5

---
# Backend Application v2
# Different version for blue-green and canary deployments
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-v2
  namespace: ingress-demo
  labels:
    app: backend
    version: v2
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      version: v2
  template:
    metadata:
      labels:
        app: backend
        version: v2
    spec:
      containers:
      - name: backend
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=Backend v2 (NEW) - Pod: $(POD_NAME) - Node: $(NODE_NAME)"
          - "-listen=:8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 5

---
# API Application
# Simulates an API service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-app
  namespace: ingress-demo
  labels:
    app: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=API Service - Version 1.0.0"
          - "-listen=:8080"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"

---
# Web Application
# Simulates a web frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-app
  namespace: ingress-demo
  labels:
    app: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=Web Frontend - Serving HTML"
          - "-listen=:8080"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"

---
# Admin Application
# Simulates an admin panel
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-app
  namespace: ingress-demo
  labels:
    app: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
    spec:
      containers:
      - name: admin
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=Admin Panel - Restricted Access"
          - "-listen=:8080"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"

---
# Health Check Service
# For demonstrating health endpoints
apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-app
  namespace: ingress-demo
  labels:
    app: health
spec:
  replicas: 1
  selector:
    matchLabels:
      app: health
  template:
    metadata:
      labels:
        app: health
    spec:
      containers:
      - name: health
        image: hashicorp/http-echo:0.2.3
        args:
          - "-text=Health Check OK"
          - "-listen=:8080"
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "16Mi"
            cpu: "25m"
          limits:
            memory: "32Mi"
            cpu: "50m"
