version: '3.8'

services:
  # ==================================================================================
  # Inference Gateway Application
  # ==================================================================================
  inference-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: inference-gateway
    ports:
      - "8000:8000"
    environment:
      # Application
      - APP_NAME=inference-gateway
      - APP_VERSION=1.0.0
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - LOG_FORMAT=json

      # Model
      - MODEL_NAME=resnet50
      - MODEL_WARMUP=true
      - MODEL_DEVICE=cpu

      # Observability
      - ENABLE_METRICS=true
      - ENABLE_TRACING=true
      - OTEL_SERVICE_NAME=inference-gateway
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_EXPORTER_OTLP_INSECURE=true

      # SLO
      - SLO_AVAILABILITY_TARGET=99.5
      - SLO_LATENCY_P99_TARGET_MS=300
      - SLO_LATENCY_P95_TARGET_MS=200
    volumes:
      - ./app:/app/app  # For development hot-reload
    depends_on:
      - prometheus
      - jaeger
    networks:
      - observability
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ==================================================================================
  # Prometheus - Metrics Storage and Querying
  # ==================================================================================
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - observability
    restart: unless-stopped

  # ==================================================================================
  # Jaeger - Distributed Tracing
  # ==================================================================================
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "4318:4318"    # OTLP HTTP receiver
      - "14250:14250"  # gRPC receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=info
    networks:
      - observability
    restart: unless-stopped

# ==================================================================================
# Networks
# ==================================================================================
networks:
  observability:
    driver: bridge

# ==================================================================================
# Volumes
# ==================================================================================
volumes:
  prometheus-data:
    driver: local
