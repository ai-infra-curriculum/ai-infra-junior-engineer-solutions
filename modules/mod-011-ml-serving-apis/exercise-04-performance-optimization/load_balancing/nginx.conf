# Nginx Load Balancer Configuration for ML API
# Provides load balancing, caching, and rate limiting

user nginx;
worker_processes auto;  # One worker per CPU core
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;  # Max connections per worker
    use epoll;                # Efficient event model for Linux
    multi_accept on;          # Accept multiple connections at once
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript
               application/json application/javascript application/xml+rss
               application/x-javascript;

    # Request size limits
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Upstream (backend API servers)
    upstream ml_api {
        # Load balancing method
        least_conn;  # Route to server with fewest connections

        # Backend servers
        server api1:8000 weight=3 max_fails=3 fail_timeout=30s;
        server api2:8000 weight=1 max_fails=3 fail_timeout=30s;
        server api3:8000 weight=1 max_fails=3 fail_timeout=30s;

        # Keepalive connections to backend
        keepalive 32;
    }

    # Rate limiting zones
    # Limit by IP address
    limit_req_zone $binary_remote_addr zone=by_ip:10m rate=100r/s;

    # Limit by API key (if using)
    limit_req_zone $http_x_api_key zone=by_api_key:10m rate=500r/s;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_by_ip:10m;

    # Cache configuration
    proxy_cache_path /var/cache/nginx/api
                     levels=1:2
                     keys_zone=api_cache:100m
                     max_size=1g
                     inactive=60m
                     use_temp_path=off;

    # Main server
    server {
        listen 80;
        server_name api.example.com;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Rate limiting
        limit_req zone=by_ip burst=20 nodelay;
        limit_conn conn_by_ip 10;

        # Health check endpoint (no caching, no rate limiting)
        location /health {
            proxy_pass http://ml_api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";

            # No caching for health checks
            proxy_cache off;
            access_log off;
        }

        # Metrics endpoint
        location /metrics {
            proxy_pass http://ml_api;
            proxy_http_version 1.1;

            # No caching
            proxy_cache off;

            # Optional: restrict access
            # allow 10.0.0.0/8;
            # deny all;
        }

        # API endpoints
        location /api/ {
            # Proxy to backend
            proxy_pass http://ml_api;
            proxy_http_version 1.1;

            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";

            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;

            # Caching for GET requests only
            proxy_cache api_cache;
            proxy_cache_methods GET;
            proxy_cache_valid 200 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503;
            proxy_cache_background_update on;
            proxy_cache_lock on;

            # Cache key (includes query params)
            proxy_cache_key "$scheme$request_method$host$request_uri";

            # Add cache status header
            add_header X-Cache-Status $upstream_cache_status always;

            # Bypass cache for certain conditions
            proxy_cache_bypass $http_x_no_cache;
            proxy_no_cache $http_x_no_cache;
        }

        # Async endpoints (no caching)
        location /api/v1/predict/async {
            proxy_pass http://ml_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # No caching for async tasks
            proxy_cache off;
        }

        # Static files (if any)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Root
        location / {
            proxy_pass http://ml_api;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server (production)
    server {
        listen 443 ssl http2;
        server_name api.example.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Same locations as HTTP server
        include /etc/nginx/conf.d/api-locations.conf;
    }
}
